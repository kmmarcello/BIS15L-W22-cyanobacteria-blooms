ipp_growth= max_ipp-min_ipp) %>%
arrange(desc(ipp_growth)) %>%
head(5)
ipp_t2 %>%
filter(country %in% c("United Arab Emirates", "Qatar", "Brunei", "Kuwait", "Singapore")) %>%
ggplot(aes(x=year, y=total_population, color=country, group=country)) +geom_point() +theme(axis.text.x = element_text(angle = 60, size = 3))
ipp_t2 %>%
filter(country %in% c("United Arab Emirates", "Qatar", "Brunei", "Kuwait", "Singapore")) %>%
ggplot(aes(x=year, y=income, color=country, group=country)) +geom_point() +theme(axis.text.x = element_text(angle = 60, size = 3))
ipp_t2 %>%
filter(country %in% c("United Arab Emirates", "Qatar", "Brunei", "Kuwait", "Singapore")) %>%
filter(year>= "2000")
ggplot(aes(x=year, y=income, color=country, group=country)) +geom_point() +theme(axis.text.x = element_text(angle = 60, size = 3))
ipp_t2 %>%
filter(country %in% c("United Arab Emirates", "Qatar", "Brunei", "Kuwait", "Singapore")) %>%
filter(year>= "2000") %>%
ggplot(aes(x=year, y=income, color=country, group=country)) +geom_point() +theme(axis.text.x = element_text(angle = 60, size = 3))
ipp_t2 %>%
filter(country %in% c("United Arab Emirates", "Qatar", "Brunei", "Kuwait", "Singapore")) %>%
filter(year>= "1950") %>%
ggplot(aes(x=year, y=income, color=country, group=country)) +geom_point() +theme(axis.text.x = element_text(angle = 60, size = 3))
View(le_century_growth)
View(poptol_century)
View(poptol_century_growth)
ipp_t2 %>%
filter(year>="1920" & year<="2020") %>%
arrange(desc(income))
ipp_century <-ipp_t2 %>%
filter(year>="1920" & year<="2020") %>%
arrange(desc(income))
gapminder_join <- inner_join(le_century, poptol_century, by= c("country", "year"))
gapminder_join <- inner_join(gapminder_join, ipp_century, by= c("country", "year"))
gapminder_join
gapminder_join %>%
arrange(desc(avg_life_expectancy,total_population,income))
gapminder_join %>%
arrange(desc(avg_life_expectancy))
gapminder_join %>%
arrange(desc(avg_life_expectancy)) %>%
head(5) %>%
group_by(country) %>%
ggplot(aes(x=avg_life_expectancy, y=total_population)) +geom_point()
gapminder_join %>%
arrange(desc(avg_life_expectancy)) %>%
head(5) %>%
group_by(country) %>%
ggplot(aes(x=avg_life_expectancy, y=total_population, group=country, color=country)) +geom_point()
gapminder_join %>%
arrange(desc(avg_life_expectancy)) %>%
head(5) %>%
ggplot(aes(x=avg_life_expectancy, y=total_population)) +geom_point()
gapminder_join %>%
arrange(desc(avg_life_expectancy)) %>%
ggplot(aes(x=avg_life_expectancy, y=total_population)) +geom_point()
gapminder_join %>%
arrange(desc(avg_life_expectancy)) %>%
head(50) %>%
ggplot(aes(x=avg_life_expectancy, y=total_population)) +geom_point()
gapminder_join %>%
arrange(desc(avg_life_expectancy)) %>%
head(100) %>%
ggplot(aes(x=avg_life_expectancy, y=total_population)) +geom_point()
gapminder_join %>%
arrange(desc(avg_life_expectancy)) %>%
head(200) %>%
ggplot(aes(x=avg_life_expectancy, y=total_population)) +geom_point()
gapminder_join %>%
arrange(desc(avg_life_expectancy)) %>%
head(200) %>%
ggplot(aes(x=avg_life_expectancy, y=total_population, color=country)) +geom_point()
knitr::opts_chunk$set(echo = TRUE)
population_total <- read.csv("data/population_total.csv")
View(population_total)
population_total <- readrr::read_csv("data/population_total.csv")
library(tidyverse)
library(here)
library(janitor)
library(skimr)
library(naniar)
population_total <- readrr::read_csv("data/population_total.csv")
population_total <- readr::read_csv("data/population_total.csv")
View(population_total)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
knitr::opts_chunk$set(echo = TRUE)
cyano_bloom <- readr::read_csv("BIS15_dataset.csv")
View(cyano_bloom)
library(tidyverse)
library(here)
library(janitor)
library(lubridate)
files <- list.files(path = "data/spiders", pattern = ".csv")
files
files <- list.files(path = "data/spiders", pattern = ".csv")
files
files <- list.files(path = "data/spiders", pattern = ".csv", full.names = TRUE)
files
spider_list <- lapply(files, read_csv)
spider_list[[3]]
class(spider_list[[3]])
spider_list[[10]]
class(spider_list[[10]])
spider_list[[10]]
names(spider_list[[10]])
str(spider_list[[10]])
names <- list.files(path = "data/spiders", pattern = ".csv")
names_list <- strsplit(names, split = " .csv")
names_list
names_vec <- unlist(names_list)
names_vec
names(spider_list) <- names_vec
names(spider_list)
spider_list$Butte
spiders_all <- bind_rows(spider_list)
spiders_all
table_A <- read_csv(here("lab12", "data", "table_A.csv"))
table_B <- read_csv(here("lab12", "data", "table_B.csv"))
str(table_A)
View(table_A)
str(table_B)
View(table_B)
table_A
table_B
inner_exampleDF <- inner_join(table_A, table_B, by="customer_ID")
inner_exampleDF
left_exampleDF <- left_join(table_A, table_B, by="customer_ID")
left_exampleDF
right_exampleDF <- right_join(table_A, table_B, by="customer_ID")
right_exampleDF
full_exampleDF <- full_join(table_A, table_B, by="customer_ID")
full_exampleDF
semi_exampleDF <- semi_join(table_A, table_B, by="customer_ID")
semi_exampleDF
anti_exampleDF <- anti_join(table_A, table_B, by="customer_ID")
anti_exampleDF
spiders_locs <- read_csv("data/spiders locations/spiders_locations.csv")
spiders_locs
spiders_with_locs <- left_join(spiders_all, spiders_locs, by = c("Accession"))
summary(spiders_with_locs)
spiders_with_locs <- left_join(spiders_all, spiders_locs, by = c("Accession"))
spiders_with_locs
class(spiders_with_locs$Date)
day <- today()
str(day)
datetime <- now()
datetime
dmy(spiders_with_locs$Date)
dateformat1 <- "20200922"
dateformat2 <- "09-22-2020"
dateformat3 <- "22/09/2020"
dateformat4 <- "09-22-2020 17:00:00"
dateformat5 <- "20200922 170000"
ymd(dateformat1)
mdy(dateformat2)
dmy(dateformat3)
dmy_hms(dateformat4)
dmy(dateformat4)
dateformat4 <- "09-22-2020 17:00:00"
mdy_hms(dateformat4)
ymd_hm(dateformat5)
ymd_hms(dateformat5)
year(datetime)
month(datetime)
day(datetime)
hour(datetime)
minute(datetime)
second(datetime)
wday(datetime, label=T)
write.csv(spiders_with_locs, file = "spiders_with_locs.csv", row.names = FALSE)
install.packages("devtools")
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
install.packages("devtools")
install.packages("devtools")
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
#install.packages("devtools")
library(devtools)
#install.packages("devtools")
library(devtools)
#install.packages("devtools")
library(devtools)
#install.packages("devtools")
#library(devtools)
devtools::install_github("dkahle/ggmap")
1
install.packages("albersusa")
update_packages()
update_packages()
update_packages()
update_packages()
update_packages()
update_packages()
#install.packages("devtools")
library(devtools)
library(devtools)
#install.packages("devtools")
#library(devtools)
devtools::install_github("dkahle/ggmap")
install.packages("albersusa")
library(tidyverse)
library(tidyverse)
update_packages()
library(here)
library(janitor)
library(here)
library(ggmap)
knitr::opts_chunk$set(echo = TRUE)
#install.packages("gapminder")
library("gapminder")
install.packages(c("cli", "glue", "magrittr", "rlang"))
#install.packages("devtools")
#library(devtools)
#devtools::install_github("dkahle/ggmap")
library(devtools)
devtools::install.github("hrbrmstr/albersusa")
devtools::install_github("hrbrmstr/albersusa")
#devtools::install_github("hrbrmstr/albersusa")
library(albersusa)
#devtools::install_github("hrbrmstr/albersusa")
library("albersusa")
library(ggmap)
install.packages("tidyverse")
library(ggmap)
install.packages(c("cli", "glue", "magrittr", "rlang"))
install.packages("rlang")
install.packages("rlang")
install.packages("rlang")
install.packages("rlang")
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
install.packages("janitor")
library(tidyverse)
update.packages()
update.packages()
install.packages(c("cli", "glue", "magrittr", "rlang"))
install.packages(c("cli", "glue", "magrittr", "rlang"))
install.packages(c("cli", "glue", "magrittr", "rlang"))
install.packages(c("cli", "glue", "magrittr", "rlang"))
install.packages(c("cli", "glue", "magrittr", "rlang"))
install.packages(c("cli", "glue", "magrittr", "rlang"))
install.packages(c("cli", "glue", "magrittr", "rlang"))
install.packages(c("cli", "glue", "magrittr", "rlang"))
install.packages(c("cli", "glue", "magrittr", "rlang"))
install.packages(c("cli", "glue", "magrittr", "rlang"))
install.packages(c("cli", "glue", "magrittr", "rlang"))
install.packages(c("cli", "glue", "magrittr", "rlang"))
install.packages(c("cli", "glue", "magrittr", "rlang"))
install.packages(c("cli", "glue", "magrittr", "rlang"))
install.packages(c("cli", "glue", "magrittr", "rlang"))
install.packages(c("cli", "glue", "magrittr", "rlang"))
install.packages(c("cli", "glue", "magrittr", "rlang"))
install.packages(c("cli", "glue", "magrittr", "rlang"))
install.packages("rlang")
install.packages(c("cli", "rlang"))
install.packages(c("cli", "rlang"))
install.packages(c("cli", "rlang"))
install.packages(c("cli", "rlang"))
install.packages("rlang")
install.packages("rlang")
install.packages("rlang")
install.packages("rlang")
install.packages("rlang")
library(tidyverse)
library(tidyverse)
install.packages("rlang")
install.packages("rlang")
library(ggmap)
remove.packages(rlang)
remove.packages("rlang")
install.packages("rlang")
install.packages("rlang")
install.packages("rlang")
library(ggmap)
library(tidyverse)
remove.packages("rlang")
View(left_exampleDF)
library(tidyverse)
install.packages("rlang")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
filament_cyanos <- readr::read_csv("data/filamentous_cyano_meta.csv")
setwd("~/GitHub/BIS15L-W22-cyanobacteria-blooms")
filament_cyanos <- readr::read_csv("data/filamentous_cyano_meta.csv")
install.packages("cli")
getwd()
library(tidyverse)
library(tidyverse)
install.packages(tidyverse)
library(tidyverse)
library(tidyr)
library(tidyverse)
update.packages()
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
uninstall.packages("tidyverse")
remove.packages("tidyverse")
install.packages("tidyverse")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library("tidyverse")
library("janitor")
filament_cyanos <- read_csv("data/filamentous_cyano_meta.csv") %>% clean_names()
trim_fil_cyn <- filament_cyanos %>%
filter(!is.na(tempurature_avg)) %>%
select(genus, organism, starts_with("gene_")) %>%
mutate(organism = as.factor(organism), genus = as.factor(genus))
head(trim_fil_cyn)
trim_fil_cyn_long <- trim_fil_cyn %>%
pivot_longer(-c(genus, organism),
names_to ="gene",
values_to = "n")
trim_fil_cyn_long
library(shiny)
library(shinydashboard)
library(shiny)
ui <- dashboardPage(
dashboardHeader( title = "CTG count for Cyanobacteria Species"),
dashboardSidebar(disable = T),
dashboardBody(
box(title = "Plot Options", width = 3,
selectInput("x", "Select Gene",
choices = c("gene_gyr_a", "gene_nus_a", "gene_inf_c","gene_inf_a", "gene_ots_a",
"gene_dna_k", "gene_rec_a", "gene_dna_j","gene_ace_f", "gene_dea_d",
"gene_inf_b", "gene_tig", "gene_rnr", "gene_dna_a", "gene_hup_b",
"gene_rbf_a", "gene_yfl_a", "gene_pnp", "gene_csp", "gene_ace_e",
"gene_des_a"),
selected= "gene_gyr_a")
),
box(
plotOutput("plot", width = "600px", height = "500px")
)
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
trim_fil_cyn_long %>%
filter(gene==input$x) %>%
ggplot(aes_string(x="organism", y="n", fill="organism"))+
geom_col()+
theme(legend.position = "none",
text = element_text(size=6),
axis.text.x = element_text(angle = 60, hjust=1))+
labs(title = "CTG count for Cyanobacteria Species", x = "Cyanobacteria", y = "Gene Count")
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
library("tidyverse")
library("janitor")
filament_cyanos <- read_csv("data/filamentous_cyano_meta.csv") %>% clean_names()
trim_fil_cyn <- filament_cyanos %>%
filter(!is.na(tempurature_avg)) %>%
select(genus, organism, starts_with("gene_")) %>%
mutate(organism = as.factor(organism), genus = as.factor(genus))
head(trim_fil_cyn)
trim_fil_cyn_long <- trim_fil_cyn %>%
pivot_longer(-c(genus, organism),
names_to ="gene",
values_to = "n")
trim_fil_cyn_long
library(shiny)
library(shinydashboard)
library(shiny)
ui <- dashboardPage(
dashboardHeader( title = "CTG count for Cyanobacteria Species"),
dashboardSidebar(disable = T),
dashboardBody(
box(title = "Plot Options", width = 3,
selectInput("x", "Select Gene",
choices = c("gene_gyr_a", "gene_nus_a", "gene_inf_c","gene_inf_a", "gene_ots_a",
"gene_dna_k", "gene_rec_a", "gene_dna_j","gene_ace_f", "gene_dea_d",
"gene_inf_b", "gene_tig", "gene_rnr", "gene_dna_a", "gene_hup_b",
"gene_rbf_a", "gene_yfl_a", "gene_pnp", "gene_csp", "gene_ace_e",
"gene_des_a"),
selected= "gene_gyr_a")
),
box(
plotOutput("plot", width = "600px", height = "500px")
)
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
trim_fil_cyn_long %>%
filter(gene==input$x) %>%
ggplot(aes_string(x="organism", y="n", fill="organism"))+
geom_col()+
theme(legend.position = "none",
text = element_text(size=6),
axis.text.x = element_text(angle = 60, hjust=1))+
labs(title = "CTG count for Cyanobacteria Species", x = "Cyanobacteria", y = "Gene Count")
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
library("tidyverse")
library("janitor")
filament_cyanos <- read_csv("data/filamentous_cyano_meta.csv") %>% clean_names()
trim_fil_cyn <- filament_cyanos %>%
filter(!is.na(tempurature_avg)) %>%
select(genus, organism, starts_with("gene_")) %>%
mutate(organism = as.factor(organism), genus = as.factor(genus))
head(trim_fil_cyn)
trim_fil_cyn_long <- trim_fil_cyn %>%
pivot_longer(-c(genus, organism),
names_to ="gene",
values_to = "n")
trim_fil_cyn_long
trim_fil_cyn_long2<- trim_fil_cyn_long %>%
filter(n!=is.na(n))
trim_fil_cyn_long2
library(shiny)
library(shinydashboard)
library(shiny)
ui <- dashboardPage(
dashboardHeader( title = "CTG count for Cyanobacteria Species"),
dashboardSidebar(disable = T),
dashboardBody(
box(title = "Plot Options", width = 3,
selectInput("x", "Select Gene",
choices = c("gene_gyr_a", "gene_nus_a", "gene_inf_c","gene_inf_a", "gene_ots_a",
"gene_dna_k", "gene_rec_a", "gene_dna_j","gene_ace_f", "gene_dea_d",
"gene_inf_b", "gene_tig", "gene_rnr", "gene_dna_a", "gene_hup_b",
"gene_rbf_a", "gene_yfl_a", "gene_pnp", "gene_csp", "gene_ace_e",
"gene_des_a"),
selected= "gene_gyr_a")
),
box(
plotOutput("plot", width = "600px", height = "500px")
)
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
trim_fil_cyn_long2 %>%
filter(gene==input$x) %>%
ggplot(aes_string(x="organism", y="n", fill="organism"))+
geom_col()+
theme(legend.position = "none",
text = element_text(size=6),
axis.text.x = element_text(angle = 60, hjust=1))+
labs(title = "CTG count for Cyanobacteria Species", x = "Cyanobacteria", y = "Gene Count")
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
# Chunk 1
library("tidyverse")
library("janitor")
# Chunk 2
filament_cyanos <- read_csv("data/filamentous_cyano_meta.csv") %>% clean_names()
trim_fil_cyn <- filament_cyanos %>%
filter(!is.na(tempurature_avg)) %>%
select(genus, organism, starts_with("gene_")) %>%
mutate(organism = as.factor(organism), genus = as.factor(genus))
head(trim_fil_cyn)
# Chunk 3
trim_fil_cyn_long <- trim_fil_cyn %>%
pivot_longer(-c(genus, organism),
names_to ="gene",
values_to = "n")
trim_fil_cyn_long
# Chunk 4
trim_fil_cyn_long2<- trim_fil_cyn_long %>%
filter(n!=is.na(n))
trim_fil_cyn_long2
# Chunk 5
library(shiny)
library(shinydashboard)
library(shiny)
ui <- dashboardPage(
dashboardHeader( title = "CTG count for Cyanobacteria Species"),
dashboardSidebar(disable = T),
dashboardBody(
box(title = "Plot Options", width = 3,
selectInput("x", "Select Gene",
choices = c("gene_gyr_a", "gene_nus_a", "gene_inf_c","gene_inf_a", "gene_ots_a",
"gene_dna_k", "gene_rec_a", "gene_dna_j","gene_ace_f", "gene_dea_d",
"gene_inf_b", "gene_tig", "gene_rnr", "gene_dna_a", "gene_hup_b",
"gene_rbf_a", "gene_yfl_a", "gene_pnp", "gene_csp", "gene_ace_e",
"gene_des_a"),
selected= "gene_gyr_a")
),
box(
plotOutput("plot", width = "600px", height = "500px")
)
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
trim_fil_cyn_long2 %>%
filter(gene==input$x) %>%
ggplot(aes_string(x="organism", y="n", fill="organism"))+
geom_col()+
theme(legend.position = "none",
text = element_text(size=6),
axis.text.x = element_text(angle = 60, hjust=1))+
labs(title = "CTG count for Cyanobacteria Species", x = "Cyanobacteria", y = "Gene Count")
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
