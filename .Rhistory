#install.packages("devtools")
#library(devtools)
devtools::install_github("dkahle/ggmap")
install.packages("albersusa")
library(tidyverse)
library(tidyverse)
update_packages()
library(here)
library(janitor)
library(here)
library(ggmap)
knitr::opts_chunk$set(echo = TRUE)
#install.packages("gapminder")
library("gapminder")
install.packages(c("cli", "glue", "magrittr", "rlang"))
#install.packages("devtools")
#library(devtools)
#devtools::install_github("dkahle/ggmap")
library(devtools)
devtools::install.github("hrbrmstr/albersusa")
devtools::install_github("hrbrmstr/albersusa")
#devtools::install_github("hrbrmstr/albersusa")
library(albersusa)
#devtools::install_github("hrbrmstr/albersusa")
library("albersusa")
library(ggmap)
install.packages("tidyverse")
library(ggmap)
install.packages(c("cli", "glue", "magrittr", "rlang"))
install.packages("rlang")
install.packages("rlang")
install.packages("rlang")
install.packages("rlang")
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
install.packages("janitor")
library(tidyverse)
update.packages()
update.packages()
install.packages(c("cli", "glue", "magrittr", "rlang"))
install.packages(c("cli", "glue", "magrittr", "rlang"))
install.packages(c("cli", "glue", "magrittr", "rlang"))
install.packages(c("cli", "glue", "magrittr", "rlang"))
install.packages(c("cli", "glue", "magrittr", "rlang"))
install.packages(c("cli", "glue", "magrittr", "rlang"))
install.packages(c("cli", "glue", "magrittr", "rlang"))
install.packages(c("cli", "glue", "magrittr", "rlang"))
install.packages(c("cli", "glue", "magrittr", "rlang"))
install.packages(c("cli", "glue", "magrittr", "rlang"))
install.packages(c("cli", "glue", "magrittr", "rlang"))
install.packages(c("cli", "glue", "magrittr", "rlang"))
install.packages(c("cli", "glue", "magrittr", "rlang"))
install.packages(c("cli", "glue", "magrittr", "rlang"))
install.packages(c("cli", "glue", "magrittr", "rlang"))
install.packages(c("cli", "glue", "magrittr", "rlang"))
install.packages(c("cli", "glue", "magrittr", "rlang"))
install.packages(c("cli", "glue", "magrittr", "rlang"))
install.packages("rlang")
install.packages(c("cli", "rlang"))
install.packages(c("cli", "rlang"))
install.packages(c("cli", "rlang"))
install.packages(c("cli", "rlang"))
install.packages("rlang")
install.packages("rlang")
install.packages("rlang")
install.packages("rlang")
install.packages("rlang")
library(tidyverse)
library(tidyverse)
install.packages("rlang")
install.packages("rlang")
library(ggmap)
remove.packages(rlang)
remove.packages("rlang")
install.packages("rlang")
install.packages("rlang")
install.packages("rlang")
library(ggmap)
library(tidyverse)
remove.packages("rlang")
View(left_exampleDF)
library(tidyverse)
install.packages("rlang")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
filament_cyanos <- readr::read_csv("data/filamentous_cyano_meta.csv")
setwd("~/GitHub/BIS15L-W22-cyanobacteria-blooms")
filament_cyanos <- readr::read_csv("data/filamentous_cyano_meta.csv")
install.packages("cli")
getwd()
library(tidyverse)
library(tidyverse)
install.packages(tidyverse)
library(tidyverse)
library(tidyr)
library(tidyverse)
update.packages()
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
uninstall.packages("tidyverse")
remove.packages("tidyverse")
install.packages("tidyverse")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library("tidyverse")
library("janitor")
filament_cyanos <- read_csv("data/filamentous_cyano_meta.csv") %>% clean_names()
trim_fil_cyn <- filament_cyanos %>%
filter(!is.na(tempurature_avg)) %>%
select(genus, organism, starts_with("gene_")) %>%
mutate(organism = as.factor(organism), genus = as.factor(genus))
head(trim_fil_cyn)
trim_fil_cyn_long <- trim_fil_cyn %>%
pivot_longer(-c(genus, organism),
names_to ="gene",
values_to = "n")
trim_fil_cyn_long
library(shiny)
library(shinydashboard)
library(shiny)
ui <- dashboardPage(
dashboardHeader( title = "CTG count for Cyanobacteria Species"),
dashboardSidebar(disable = T),
dashboardBody(
box(title = "Plot Options", width = 3,
selectInput("x", "Select Gene",
choices = c("gene_gyr_a", "gene_nus_a", "gene_inf_c","gene_inf_a", "gene_ots_a",
"gene_dna_k", "gene_rec_a", "gene_dna_j","gene_ace_f", "gene_dea_d",
"gene_inf_b", "gene_tig", "gene_rnr", "gene_dna_a", "gene_hup_b",
"gene_rbf_a", "gene_yfl_a", "gene_pnp", "gene_csp", "gene_ace_e",
"gene_des_a"),
selected= "gene_gyr_a")
),
box(
plotOutput("plot", width = "600px", height = "500px")
)
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
trim_fil_cyn_long %>%
filter(gene==input$x) %>%
ggplot(aes_string(x="organism", y="n", fill="organism"))+
geom_col()+
theme(legend.position = "none",
text = element_text(size=6),
axis.text.x = element_text(angle = 60, hjust=1))+
labs(title = "CTG count for Cyanobacteria Species", x = "Cyanobacteria", y = "Gene Count")
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
library("tidyverse")
library("janitor")
filament_cyanos <- read_csv("data/filamentous_cyano_meta.csv") %>% clean_names()
trim_fil_cyn <- filament_cyanos %>%
filter(!is.na(tempurature_avg)) %>%
select(genus, organism, starts_with("gene_")) %>%
mutate(organism = as.factor(organism), genus = as.factor(genus))
head(trim_fil_cyn)
trim_fil_cyn_long <- trim_fil_cyn %>%
pivot_longer(-c(genus, organism),
names_to ="gene",
values_to = "n")
trim_fil_cyn_long
library(shiny)
library(shinydashboard)
library(shiny)
ui <- dashboardPage(
dashboardHeader( title = "CTG count for Cyanobacteria Species"),
dashboardSidebar(disable = T),
dashboardBody(
box(title = "Plot Options", width = 3,
selectInput("x", "Select Gene",
choices = c("gene_gyr_a", "gene_nus_a", "gene_inf_c","gene_inf_a", "gene_ots_a",
"gene_dna_k", "gene_rec_a", "gene_dna_j","gene_ace_f", "gene_dea_d",
"gene_inf_b", "gene_tig", "gene_rnr", "gene_dna_a", "gene_hup_b",
"gene_rbf_a", "gene_yfl_a", "gene_pnp", "gene_csp", "gene_ace_e",
"gene_des_a"),
selected= "gene_gyr_a")
),
box(
plotOutput("plot", width = "600px", height = "500px")
)
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
trim_fil_cyn_long %>%
filter(gene==input$x) %>%
ggplot(aes_string(x="organism", y="n", fill="organism"))+
geom_col()+
theme(legend.position = "none",
text = element_text(size=6),
axis.text.x = element_text(angle = 60, hjust=1))+
labs(title = "CTG count for Cyanobacteria Species", x = "Cyanobacteria", y = "Gene Count")
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
library("tidyverse")
library("janitor")
filament_cyanos <- read_csv("data/filamentous_cyano_meta.csv") %>% clean_names()
trim_fil_cyn <- filament_cyanos %>%
filter(!is.na(tempurature_avg)) %>%
select(genus, organism, starts_with("gene_")) %>%
mutate(organism = as.factor(organism), genus = as.factor(genus))
head(trim_fil_cyn)
trim_fil_cyn_long <- trim_fil_cyn %>%
pivot_longer(-c(genus, organism),
names_to ="gene",
values_to = "n")
trim_fil_cyn_long
trim_fil_cyn_long2<- trim_fil_cyn_long %>%
filter(n!=is.na(n))
trim_fil_cyn_long2
library(shiny)
library(shinydashboard)
library(shiny)
ui <- dashboardPage(
dashboardHeader( title = "CTG count for Cyanobacteria Species"),
dashboardSidebar(disable = T),
dashboardBody(
box(title = "Plot Options", width = 3,
selectInput("x", "Select Gene",
choices = c("gene_gyr_a", "gene_nus_a", "gene_inf_c","gene_inf_a", "gene_ots_a",
"gene_dna_k", "gene_rec_a", "gene_dna_j","gene_ace_f", "gene_dea_d",
"gene_inf_b", "gene_tig", "gene_rnr", "gene_dna_a", "gene_hup_b",
"gene_rbf_a", "gene_yfl_a", "gene_pnp", "gene_csp", "gene_ace_e",
"gene_des_a"),
selected= "gene_gyr_a")
),
box(
plotOutput("plot", width = "600px", height = "500px")
)
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
trim_fil_cyn_long2 %>%
filter(gene==input$x) %>%
ggplot(aes_string(x="organism", y="n", fill="organism"))+
geom_col()+
theme(legend.position = "none",
text = element_text(size=6),
axis.text.x = element_text(angle = 60, hjust=1))+
labs(title = "CTG count for Cyanobacteria Species", x = "Cyanobacteria", y = "Gene Count")
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
# Chunk 1
library("tidyverse")
library("janitor")
# Chunk 2
filament_cyanos <- read_csv("data/filamentous_cyano_meta.csv") %>% clean_names()
trim_fil_cyn <- filament_cyanos %>%
filter(!is.na(tempurature_avg)) %>%
select(genus, organism, starts_with("gene_")) %>%
mutate(organism = as.factor(organism), genus = as.factor(genus))
head(trim_fil_cyn)
# Chunk 3
trim_fil_cyn_long <- trim_fil_cyn %>%
pivot_longer(-c(genus, organism),
names_to ="gene",
values_to = "n")
trim_fil_cyn_long
# Chunk 4
trim_fil_cyn_long2<- trim_fil_cyn_long %>%
filter(n!=is.na(n))
trim_fil_cyn_long2
# Chunk 5
library(shiny)
library(shinydashboard)
library(shiny)
ui <- dashboardPage(
dashboardHeader( title = "CTG count for Cyanobacteria Species"),
dashboardSidebar(disable = T),
dashboardBody(
box(title = "Plot Options", width = 3,
selectInput("x", "Select Gene",
choices = c("gene_gyr_a", "gene_nus_a", "gene_inf_c","gene_inf_a", "gene_ots_a",
"gene_dna_k", "gene_rec_a", "gene_dna_j","gene_ace_f", "gene_dea_d",
"gene_inf_b", "gene_tig", "gene_rnr", "gene_dna_a", "gene_hup_b",
"gene_rbf_a", "gene_yfl_a", "gene_pnp", "gene_csp", "gene_ace_e",
"gene_des_a"),
selected= "gene_gyr_a")
),
box(
plotOutput("plot", width = "600px", height = "500px")
)
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
trim_fil_cyn_long2 %>%
filter(gene==input$x) %>%
ggplot(aes_string(x="organism", y="n", fill="organism"))+
geom_col()+
theme(legend.position = "none",
text = element_text(size=6),
axis.text.x = element_text(angle = 60, hjust=1))+
labs(title = "CTG count for Cyanobacteria Species", x = "Cyanobacteria", y = "Gene Count")
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
knitr::opts_chunk$set(echo = TRUE)
#install.packages("viridisLite")
#install.packages("svglite")
library(tidyverse)
library(RColorBrewer)
library(paletteer)
library(janitor)
library(here)
library(skimr)
library(viridis)
library(shiny)
library(shinydashboard)
library(devtools)
library(svglite)
filament_cyanos <- readr::read_csv("data/filamentous_cyano_meta.csv")
summary(filament_cyanos)
head(filament_cyanos)
filament_cyanos <- clean_names(filament_cyanos)
names(filament_cyanos)
gene_data_genus <- filament_cyanos %>%
select(genus, contains("gene_")) %>%
pivot_longer(-genus,
names_to = "gene",
values_to = "gene_count") %>%
filter(!is.na(gene_count))
gene_data_genus
gene_data_genus$gene_count <- as.factor(gene_data_genus$gene_count)
fil_heatmap <- gene_data_genus %>%
ggplot(aes(y=gene, x=genus))+
geom_tile(aes(fill= gene_count, color="white"))+
scale_fill_viridis(discrete=TRUE, direction = -1)+
theme(legend.position = "right",
text = element_text(size=6),
axis.text.x = element_text(angle = 45, hjust=1))+
coord_fixed()+ #maintains aspect ratio so 1 unit on x is 1 unit on y
labs(title = "Cold Tolerance Gene Count for Cyanobacteria Genera",x = "Genome", y = "Gene")
ggsave("figures/fil_gene_count_genus_heatmap.svg", width=10, height=6, plot = fil_heatmap, dpi = 200)
fil_heatmap
gene_data_organism <- filament_cyanos %>%
select(organism, contains("gene_")) %>% # get rid of the gene_ part for the final pres.
pivot_longer(-organism,
names_to = "gene",
values_to = "gene_count") %>%
filter(!is.na(gene_count))
gene_data_organism
gene_data_organism$gene_count <- as.factor(gene_data_organism$gene_count)
fil_heatmap <- gene_data_organism %>%
ggplot(aes(y=gene, x=organism))+
geom_tile(aes(fill= gene_count, color="white"))+
scale_fill_viridis(discrete=TRUE, direction = -1)+
theme(legend.position = "right",
text = element_text(size=7),
axis.text.x = element_text(angle = 60, hjust=1))+
coord_fixed()+ #maintains aspect ratio so 1 unit on x is 1 unit on y
labs(title = "Cold Tolerance Gene Count for Cyanobacteria Strains",x = "Genome", y = "Gene")
ggsave("figures/fil_gene_count_heatmap.png", width=10, height=6, plot = fil_heatmap, dpi = 200)
fil_heatmap
temperature_gene <- filament_cyanos %>%
select(organism, tempurature_avg, contains("gene_")) %>%
filter(!is.na(tempurature_avg))
temperature_gene
temp_organism <- filament_cyanos %>%
select(organism, tempurature_avg, genus) %>%
filter(!is.na(tempurature_avg)) %>%
ggplot(aes(x = organism, y = tempurature_avg, fill = genus)) +
geom_col()+
theme(legend.position = "right",
text = element_text(size=7),
axis.text.x = element_text(angle = 60, hjust=1))+
labs(title = "Environmental Temperature for Cyanobacteria Species",x = "Cyanobacteria", y = "Temperature C")
temp_organism
ggsave("figures/temp_organism_plot.png", width=10, height=6, plot = temp_organism, dpi = 200)
temp_organism <- filament_cyanos %>%
select(organism, tempurature_avg, genus, gene_dea_d) %>%
filter(!is.na(tempurature_avg)) %>%
filter(!is.na(gene_dea_d)) %>%
ggplot(aes(x = organism, y = gene_dea_d, fill = genus)) +
geom_col()+
theme(legend.position = "right",
text = element_text(size=6),
axis.text.x = element_text(angle = 60, hjust=1))+
labs(title = "CTG count for Cyanobacteria Species",x = "Cyanobacteria", y = "Gene Count")
ggsave("figures/fil_gene_plot.png", width=10, height=6, plot = temp_organism, dpi = 200)
temp_organism
library("tidyverse")
library("janitor")
filament_cyanos <- read_csv("data/filamentous_cyano_meta.csv") %>% clean_names()
trim_fil_cyn <- filament_cyanos %>%
filter(!is.na(tempurature_avg)) %>%
select(genus, organism, starts_with("gene_")) %>%
mutate(organism = as.factor(organism), genus = as.factor(genus))
head(trim_fil_cyn)
trim_fil_cyn_long <- trim_fil_cyn %>%
pivot_longer(-c(genus, organism),
names_to ="gene",
values_to = "n")
trim_fil_cyn_long
trim_fil_cyn_long2<- trim_fil_cyn_long %>%
filter(n!=is.na(n))
trim_fil_cyn_long2
library(shiny)
library(shinydashboard)
library(shiny)
ui <- dashboardPage(
dashboardHeader( title = "CTG count for Cyanobacteria Species"),
dashboardSidebar(disable = T),
dashboardBody(
box(title = "Plot Options", width = 3,
selectInput("x", "Select Gene",
choices = c("gene_gyr_a", "gene_nus_a", "gene_inf_c","gene_inf_a", "gene_ots_a",
"gene_dna_k", "gene_rec_a", "gene_dna_j","gene_ace_f", "gene_dea_d",
"gene_inf_b", "gene_tig", "gene_rnr", "gene_dna_a", "gene_hup_b",
"gene_rbf_a", "gene_yfl_a", "gene_pnp", "gene_csp", "gene_ace_e",
"gene_des_a"),
selected= "gene_gyr_a")
),
box(
plotOutput("plot", width = "600px", height = "500px")
)
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
trim_fil_cyn_long2 %>%
filter(gene==input$x) %>%
ggplot(aes_string(x="organism", y="n", fill="organism"))+
geom_col()+
theme(legend.position = "none",
text = element_text(size=6),
axis.text.x = element_text(angle = 60, hjust=1))+
labs(title = "CTG count for Cyanobacteria Species", x = "Cyanobacteria", y = "Gene Count")
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
fil_heatmap <- gene_data_organism %>%
ggplot(aes(y=gene, x=organism))+
geom_tile(aes(fill= gene_count, color="white"))+
scale_fill_viridis(discrete=TRUE, direction = -1)+
theme(legend.position = "right",
text = element_text(size=10),
axis.text.x = element_text(angle = 60, hjust=1))+
coord_fixed()+ #maintains aspect ratio so 1 unit on x is 1 unit on y
labs(title = "Cold Tolerance Gene Count for Cyanobacteria Strains",x = "Genome", y = "Gene")
ggsave("figures/fil_gene_count_heatmap.png", width=10, height=6, plot = fil_heatmap, dpi = 200)
fil_heatmap
fil_heatmap <- gene_data_organism %>%
ggplot(aes(y=gene, x=organism))+
geom_tile(aes(fill= gene_count, color="white"))+
scale_fill_discrete(discrete=TRUE, direction = -1)+
theme(legend.position = "right",
text = element_text(size=10),
axis.text.x = element_text(angle = 60, hjust=1))+
coord_fixed()+ #maintains aspect ratio so 1 unit on x is 1 unit on y
labs(title = "Cold Tolerance Gene Count for Cyanobacteria Strains",x = "Genome", y = "Gene")
fil_heatmap <- gene_data_organism %>%
ggplot(aes(y=gene, x=organism))+
geom_tile(aes(fill= gene_count, color="white"))+
scale_fill_brewer(discrete=TRUE, direction = -1)+
theme(legend.position = "right",
text = element_text(size=10),
axis.text.x = element_text(angle = 60, hjust=1))+
coord_fixed()+ #maintains aspect ratio so 1 unit on x is 1 unit on y
labs(title = "Cold Tolerance Gene Count for Cyanobacteria Strains",x = "Genome", y = "Gene")
fil_heatmap <- gene_data_organism %>%
ggplot(aes(y=gene, x=organism))+
geom_tile(aes(fill= gene_count, color="white"))+
scale_fill_mako(discrete=TRUE, direction = -1)+
theme(legend.position = "right",
text = element_text(size=10),
axis.text.x = element_text(angle = 60, hjust=1))+
coord_fixed()+ #maintains aspect ratio so 1 unit on x is 1 unit on y
labs(title = "Cold Tolerance Gene Count for Cyanobacteria Strains",x = "Genome", y = "Gene")
fil_heatmap <- gene_data_organism %>%
ggplot(aes(y=gene, x=organism))+
geom_tile(aes(fill= gene_count, color="white"))+
scale_fill_viridis_b(discrete=TRUE, direction = -1)+
theme(legend.position = "right",
text = element_text(size=10),
axis.text.x = element_text(angle = 60, hjust=1))+
coord_fixed()+ #maintains aspect ratio so 1 unit on x is 1 unit on y
labs(title = "Cold Tolerance Gene Count for Cyanobacteria Strains",x = "Genome", y = "Gene")
fil_heatmap <- gene_data_organism %>%
ggplot(aes(y=gene, x=organism))+
geom_tile(aes(fill= gene_count, color="white"))+
scale_fill_viridis(discrete=TRUE, direction = -1, option = mako)+
theme(legend.position = "right",
text = element_text(size=10),
axis.text.x = element_text(angle = 60, hjust=1))+
coord_fixed()+ #maintains aspect ratio so 1 unit on x is 1 unit on y
labs(title = "Cold Tolerance Gene Count for Cyanobacteria Strains",x = "Genome", y = "Gene")
ggsave("figures/fil_gene_count_heatmap.png", width=10, height=6, plot = fil_heatmap, dpi = 200)
fil_heatmap <- gene_data_organism %>%
ggplot(aes(y=gene, x=organism))+
geom_tile(aes(fill= gene_count, color="white"))+
scale_fill_viridis(discrete=TRUE, direction = -1, option = "mako")+
theme(legend.position = "right",
text = element_text(size=10),
axis.text.x = element_text(angle = 60, hjust=1))+
coord_fixed()+ #maintains aspect ratio so 1 unit on x is 1 unit on y
labs(title = "Cold Tolerance Gene Count for Cyanobacteria Strains",x = "Genome", y = "Gene")
ggsave("figures/fil_gene_count_heatmap.png", width=10, height=6, plot = fil_heatmap, dpi = 200)
fil_heatmap
